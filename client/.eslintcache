[{"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/index.js":"1","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Login.jsx":"2","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/reportWebVitals.js":"3","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/serviceWorker.js":"4","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Signup.jsx":"5","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/index.js":"6","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Footer.jsx":"7","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/JobSearch.jsx":"8","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/JobResultList.jsx":"9","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Resume.jsx":"10","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Home.jsx":"11","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Logout.jsx":"12","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Navigation.jsx":"13","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Splash/Splash.jsx":"14"},{"size":1419,"mtime":1652366691353,"results":"15","hashOfConfig":"16"},{"size":1038,"mtime":1652366691346,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1652366691354,"results":"18","hashOfConfig":"16"},{"size":5002,"mtime":1652366691355,"results":"19","hashOfConfig":"16"},{"size":1215,"mtime":1652366691347,"results":"20","hashOfConfig":"16"},{"size":345,"mtime":1652366691350,"results":"21","hashOfConfig":"16"},{"size":353,"mtime":1652366691345,"results":"22","hashOfConfig":"16"},{"size":2480,"mtime":1652366691346,"results":"23","hashOfConfig":"16"},{"size":1147,"mtime":1652368843846,"results":"24","hashOfConfig":"16"},{"size":5136,"mtime":1652368848779,"results":"25","hashOfConfig":"16"},{"size":291,"mtime":1652377064755,"results":"26","hashOfConfig":"16"},{"size":683,"mtime":1652366691347,"results":"27","hashOfConfig":"16"},{"size":1280,"mtime":1652366691347,"results":"28","hashOfConfig":"16"},{"size":4487,"mtime":1652376748287,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1cf56o6",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/index.js",["61"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport {\n  Navigation,\n  Footer,\n  Home,\n  JobSearch,\n  Resume,\n  Logout,\n  JobResultList,\n} from \"./components\";\nimport Login from './components/Login.jsx';\nimport Signup from './components/Signup';\n\nReactDOM.render(\n  <Router>\n    <Navigation />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/jobsearch\" element={<JobSearch />} />\n      <Route path=\"/jobresultlist\" element={<JobResultList />} />\n      <Route path=\"/resume-builder\" element={<Resume />} />\n      <Route path=\"/logout\" element={<Logout />}/>\n      <Route path=\"/login\" element={<Login />}/>\n      <Route path=\"/signup\" element={<Signup />}>\n      </Route>\n    </Routes>\n    <Footer />\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n\n{/* // const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n */}\n reportWebVitals();\n",["62","63"],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Login.jsx",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/reportWebVitals.js",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/serviceWorker.js",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Signup.jsx",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/index.js",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Footer.jsx",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/JobSearch.jsx",["64","65","66","67","68"],"import { useState, useEffect } from 'react';\nimport React from 'react'\nimport { Form, Col } from \"react-bootstrap\";\nimport JobResultList from './JobResultList';\nimport joblist from \"../joblist.json\";\n\n\n//Import our search methods\n// import search from '../utils/API';\nconsole.log('I am rendering');\n\n\nconst JobSearch = () => {\n  const [ searchTerm, setSearchTerm ] = useState('')\n  const [ searchResults, setSearchResults ] = useState([])\n\n  // Search the json data for whatever the searchTerm is \n  // And set searchResults to whatever the result is\n  const searchData = () => {\n    console.log(searchTerm)\n    // search the json data for whatever the user is looking for\n    // use array.filter()\n    // use setSearchResults()\n  }\n\n  // Method to get search results and set state\n  // const searchJobs = async (query) => {\n  //     const response = await search(query);\n  //     setResults(response.data.data);\n  // };\n\n\n  // We want to run this method when the component first loads so that we have data for jobs to display to the page\n  //The second argument is the dependency array. this means this method will onlyrun when the compent first loads\n\n  return (\n    <div className=\"dashboard\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">Job Search</h1>\n            {/* Pass our results to the jobResultList component to map over  */}\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                onChange={(event) => {\n                  setSearchTerm(event.target.value);\n                }}\n              />\n              {/* {JSONDATA.filter((val) => {\n                  if (searchTerm == \"\") {\n                    return val\n                  } else if (val.Company.toLowerCase().includes(searchTerm.toLowerCase())){\n                    return val\n                  }\n                }).map((val, key) => {\n                  return <div className=\"user\" key={key}> <p>{val.Company}</p></div>\n                })} */}\n              <button onClick={searchData}>Search</button>\n            </div>\n\n            {searchResults.length > 0 && (\n              <div>\n                <JobResultList results={searchResults} />\n              </div>\n            )}\n\n            {/* <JobResultList results={results} /> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n};\n\n\n\nexport default JobSearch;","/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/JobResultList.jsx",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Resume.jsx",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Home.jsx",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Logout.jsx",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Navigation.jsx",[],"/Users/caitlinstevenson/Documents/bootcamp/homework/fgp_job_searchify/client/src/components/Splash/Splash.jsx",["69","70","71","72","73"],{"ruleId":"74","severity":1,"message":"75","line":40,"column":1,"nodeType":"76","messageId":"77","endLine":50,"endColumn":5},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":20,"nodeType":"84","messageId":"85","endLine":1,"endColumn":29},{"ruleId":"82","severity":1,"message":"86","line":3,"column":10,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":3,"column":16,"nodeType":"84","messageId":"85","endLine":3,"endColumn":19},{"ruleId":"82","severity":1,"message":"88","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":15},{"ruleId":"82","severity":1,"message":"89","line":15,"column":26,"nodeType":"84","messageId":"85","endLine":15,"endColumn":42},{"ruleId":"90","severity":1,"message":"91","line":27,"column":18,"nodeType":"92","endLine":27,"endColumn":86},{"ruleId":"90","severity":1,"message":"91","line":38,"column":18,"nodeType":"92","endLine":38,"endColumn":86},{"ruleId":"90","severity":1,"message":"91","line":46,"column":15,"nodeType":"92","endLine":46,"endColumn":60},{"ruleId":"90","severity":1,"message":"91","line":51,"column":15,"nodeType":"92","endLine":51,"endColumn":60},{"ruleId":"90","severity":1,"message":"91","line":61,"column":15,"nodeType":"92","endLine":61,"endColumn":57},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Col' is defined but never used.","'joblist' is defined but never used.","'setSearchResults' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]